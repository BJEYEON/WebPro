-- 프로그램에 필요한 QUERY
-- 1. 회원가입(고객전화와 고객이름은 입력받아 INSERT)
    -- public int insertCustomer(String ctel, String cname)
    -- public int insertCustomer(CustomerDto dto)
INSERT INTO CUSTOMER (CID, CTEL, CNAME)
    VALUES (CUSTOMER_CID_SEQ.NEXTVAL, '010-6666-9999', '유길동');
--COMMIT;

-- 2. 폰뒤 4자리(풀번호)검색 (SEARCHTEL을 받아 CID, CNAME, CPOINT CAMOOUNT, LEVELNAME, FORLEVELUP)
    -- public ArrayList<CustomerDto> ctelGetCustomers(String searchTel)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, HIGH+1-CAMOUNT
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO AND CTEL LIKE '%'||'9999';
    
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME, 
    (SELECT HIGH+1-CAMOUNT FROM CUSTOMER WHERE LEVELNO!=5 AND CID=C.CID) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO=L.LEVELNO AND CTEL LIKE '%'||'9999'
    ORDER BY CAMOUNT DESC, CID; -- DAO에 들어갈 QUERY
    
--3. 물품구매 (CID, PRICE를 받아, 구매액의 5%를 CPOINT 누적 바뀐 CAMOUNT에 따라, LEVELNO 수정)
    -- public int buy(int cid, int price)
    -- 1단계 : CPOINT와 CAMOUNT 누적
UPDATE CUSTOMER
    SET CPOINT = CPOINT + (1000000*0.05),
        CAMOUNT = CAMOUNT + 1000000
        WHERE CID=1;
SELECT * FROM CUSTOMER;
    -- 2단계: 바뀐 CAMOUNT에 따라 LEVELNO조정
SELECT CNAME, CAMOUNT, C.LEVELNO 현재레벨, L.LEVELNO 바뀔레벨, LOW, HIGH
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID=1;
    
    
    SELECT L.LEVELNO 바뀔레벨
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID=1; -- UPDATE안에 SUBQUERY로 들어갈 부분
    
UPDATE CUSTOMER
    SET LEVELNO = (SELECT L.LEVELNO 바뀔레벨
                    FROM CUSTOMER C, CUS_LEVEL L
                    WHERE CAMOUNT BETWEEN LOW AND HIGH AND CID=1)
    WHERE CID=1;
    SELECT * FROM CUSTOMER;
    --ROLLBACK;
-- DAO에 들어갈 QUERY 1단계+2단계
UPDATE CUSTOMER
    SET CPOINT = CPOINT + (1000000*0.05), 
        CAMOUNT = CAMOUNT + 1000000, 
        LEVELNO = (SELECT L.LEVELNO
                    FROM CUSTOMER C, CUS_LEVEL L
                    WHERE CAMOUNT+1000000 BETWEEN LOW AND HIGH AND CID=1)
    WHERE CID=1;
SELECT * FROM CUSTOMER WHERE CID=1;

-- 3번 물품구매 후 고객정보를 출력(CID, CTEL, CNAME,CPOINT, CAMOUNT, LEVELNAME, FORLEVELUP)
    --public CustomerDto getCustomer(int cid)
SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
    (SELECT HIGH+1-CAMOUNT FROM CUSTOMER WHERE LEVELNO!=5 AND CID=5 AND CID=C.CID) FORLEVELUP
    FROM CUSTOMER C, CUS_LEVEL L
    WHERE C.LEVELNO = L.LEVELNO AND CID=1;
-- 4번 전 고객등급별 추출
    -- public ArrayList<String> getLevelNames()
SELECT LEVELNAME FROM CUS_LEVEL;
-- 4번 고객등급별(등급이름) 출력 : levelName입력받아 CID, CNAME, CPOINT CAMOOUNT, LEVELNAME, FORLEVELUP
    -- public ArrayList<CustomerDto> levelNameGetCustomers(String levelName)
    SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
        (SELECT HIGH+1-CAMOUNT FROM CUSTOMER WHERE LEVELNO!=5 AND CID=C.CID) FORLEVELUP
        FROM CUSTOMER C, CUS_LEVEL L
        WHERE C.LEVELNO = L.LEVELNO AND LEVELNAME = UPPER('NORMAL')
        ORDER BY CAMOUNT DESC, CID;
        
-- 5번 고객전체 출력 : CID, CNAME, CPOINT CAMOOUNT, LEVELNAME, FORLEVELUP
    -- public ArrayList<CustomerDto> GetCustomers(String levelName)
    SELECT CID, CTEL, CNAME, CPOINT, CAMOUNT, LEVELNAME,
        (SELECT HIGH+1-CAMOUNT FROM CUSTOMER WHERE LEVELNO!=5 AND CID=C.CID) FORLEVELUP
        FROM CUSTOMER C, CUS_LEVEL L
        WHERE C.LEVELNO = L.LEVELNO --AND LEVELNAME = 'NORMAL'
        ORDER BY CAMOUNT DESC, CID;
        
-- 6번 회원탈퇴: ctel 받아 delete
    -- public int deleteCustomer(String ctel)
DELETE FROM CUSTOMER WHERE CTEL='010-6666-6666';
COMMIT;    
    
    
    
    
    
    
    