<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.example.world.dao.IAdminDao">
 	<select id="getPwd"  resultType="string">
		select pwd from Lworker where id=#{param1}
	</select>
	<select id="getName"  resultType="string">
		select name from Lworker where id=#{param1}
	</select>
	<select id="getAllCount" resultType="_int">
		select count(*) from ${param1} where ${param2} like '%'||#{param3}||'%'
	</select>
	
	<!-- Notice -->
	<select id="listNotice" resultType="com.example.world.dto.NoticeVO">
		select * from(
		select * from(
			select rownum as rn, p.* from
			((select * from notice where title like '%'||#{param2}||'%' order by nseq desc)p)
		) where rn &gt;=#{param1.startNum}
		) where rn &lt;=#{param1.endNum}
	</select>

	<select id="viewNotice" resultType="com.example.world.dto.NoticeVO">
		select * from notice where nseq=#{param1}
	</select>
	
	<update id="updateNotice" >
		update notice set id=#{id}, title=#{title}, ncontent=#{ncontent}  where nseq=#{nseq}
	</update>
	
	<insert id="insertNotice" parameterType="com.example.world.dto.NoticeVO">
		insert into notice(nseq, id, title, ncontent )
		values( notice_nseq.nextVal, #{id}, #{title}, #{ncontent})
	</insert>
	
	<delete id="noticeDelete">
		delete from notice where nseq = #{param1}
	</delete> 
	
	<!-- banner -->
	<select id="getBannerList" resultType="com.example.world.dto.BannerVO">
		select * from banner order by order_seq
	</select>
	
	<insert id="insertBanner" parameterType="com.example.world.dto.BannerVO">
		insert into banner(bseq, subject, order_seq, useyn, image )
		values( banner_seq.nextVal, #{subject}, #{order_seq}, #{useyn}, #{image} )
	</insert>
	
	<update id="updateSeq" >
		update banner set order_seq=#{param1}, useyn=#{param2} where bseq=#{param3}
	</update>
	
	<delete id="deleteBanner">
		delete from banner where bseq = #{param1}
	</delete> 
	
	<!--  member -->
	
	<select id ="listMember" resultType="com.example.world.dto.MemberVO">
		select * from (
		select * from (
			select rownum as rn, m.*from(( select * from lmember 
			where name like '%' || #{param2} || '%' 
			order by indate  desc) m)
		) where rn &gt; = #{param1.startNum}
		) where rn &lt; = #{param1.endNum}
	</select>
	
	<!-- attraction -->
	<select id ="listAttraction" resultType="com.example.world.dto.AttractionVO">
		select * from (
		select * from (
			select rownum as rn, at.*from(( select * from attraction 
			where atname like '%' || #{param2} || '%' 
			order by aseq  desc) at)
		) where rn &gt; = #{param1.startNum}
		) where rn &lt; = #{param1.endNum}
	</select>
	
	<insert id="insertat" >	
		insert into attraction
			(aseq, atname, acontent , act1, act2, image,
				pnum, limitkey, limitage, bestat, aresult )
		values(attraction_aseq.nextval, #{atname}, #{acontent}, #{act1}, #{act2},
				#{image}, #{pnum}, #{limitkey}, #{limitage}, #{bestat}, #{aresult} )	
	</insert>

	<update id="updateat" >
		update attraction set atname = #{atname}, acontent = #{acontent}, act1 = #{act1}, 
			act2 = #{act2}, image = #{image}, pnum = #{pnum}, limitkey = #{limitkey},
			limitage = #{limitage}, bestat = #{bestat}, aresult = #{aresult} where aseq = #{aseq}
	</update>
	
	<delete id="deleteat">
		delete from attraction where aseq=#{param1}
	</delete>
	
	<!--  qna  -->
	
	<select id ="listQna" resultType="com.example.world.dto.QnaVO">
		select * from (
		select * from (
			select rownum as rn, q.*from(( select * from lqna 
			where title like '%' || #{param2} || '%' 
			order by lqseq desc) q)
		) where rn &gt; = #{param1.startNum}
		) where rn &lt; = #{param1.endNum}
	</select>

	<update id ="updateQna">
		update lqna set reply = #{param2}, rep='Y' where lqseq = #{param1}
	</update>
	
	
	<update id="memberReinsert">
		update Lmember set useyn=#{param2} where id=#{param1}
	</update>
	
	<select id="getAdminOrderList" resultType="com.example.world.dto.Cart2VO">
		select * from cart2  where id=#{param1} and result=#{param2} order by cseq desc
	</select>
	
</mapper>
















